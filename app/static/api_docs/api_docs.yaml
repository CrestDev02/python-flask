openapi: 3.0.0
info:
  title: Flask Boilerplate
  description: APIs Documentation.
  version: 1.0.0
paths:
  /api/v1/user/signup:
    post:
      summary: User Registration
      description: Handles user registration by accepting user details and creating a new account.
      operationId: signUpUser
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user.
                  example: "John Doe"
                email:
                  type: string
                  description: The email address of the user.
                  example: "john.doe@example.com"
                password:
                  type: string
                  description: The password for the user account.
                  example: "securepassword123"
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User registered successfully."
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "John Doe"
                      email:
                        type: string
                        example: "john.doe@example.com"
        '400':
          description: Bad Request (e.g., validation errors or user already exists).
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email already exists."
                  error:
                    type: string
                    example: "EMAIL_EXISTS"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Something went wrong."
                  error:
                    type: string
                    example: "SERVER_ERROR"
  /api/v1/user/signin:
    post:
      summary: User Login
      description: Handles user login by accepting user credentials.
      operationId: signInUser
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user.
                  example: "john.doe@example.com"
                password:
                  type: string
                  description: The password for the user account.
                  example: "securepassword123"
      responses:
        '200':
          description: User logged in successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login successful."
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: "your_access_token_here"
                      refresh_token:
                        type: string
                        example: "your_refresh_token_here"
                      details:
                        type: object
                        properties:
                          created_at:
                            type: string
                            example: "2024-09-18T05:33:58.459068"
                          deactivated_at:
                            type: string
                            example: null
                          email:
                            type: string
                            example: "john.doe@example.com"
                          id:
                            type: integer
                            example: 1
                          last_login_at:
                            type: string
                            example: null
                          name:
                            type: string
                            example: "John"
                          updated_at:
                            type: string
                            example: null
                          uuid:
                            type: string
                            example: "d8798ebe-6ade-4bb9-bc41-ce9cfa7e878a"
        '400':
          description: Bad Request (e.g., invalid credentials).
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid email or password."
                  error:
                    type: string
                    example: "INVALID_CREDENTIALS"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Something went wrong."
                  error:
                    type: string
                    example: "SERVER_ERROR"
  /api/v1/user/details:
    get:
      summary: Get User Details
      description: Retrieves the details of the currently authenticated user.
      operationId: getUserDetails
      tags:
        - User
      responses:
        '200':
          description: User details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User details retrieved successfully."
                  data:
                    type: object
                    properties:
                      created_at:
                        type: string
                        example: "2024-09-18T05:33:58.459068"
                      deactivated_at:
                        type: string
                        example: null
                      email:
                        type: string
                        example: "john.doe@example.com"
                      id:
                        type: integer
                        example: 1
                      last_login_at:
                        type: string
                        example: null
                      name:
                        type: string
                        example: "John"
                      updated_at:
                        type: string
                        example: null
                      uuid:
                        type: string
                        example: "d8798ebe-6ade-4bb9-bc41-ce9cfa7e878a"
        '401':
          description: Unauthorized (e.g., user not authenticated).
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Unauthorized access."
                  error:
                    type: string
                    example: "UNAUTHORIZED"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Something went wrong."
                  error:
                    type: string
                    example: "SERVER_ERROR"